{"version":3,"sources":["App.js","logo.svg","reportWebVitals.js","index.js"],"names":["canvas","context","particles","radians","alpha","mouseDown","colors","App","useEffect","document","getElementById","getContext","width","window","innerWidth","height","innerHeight","init","animate","i","canvasWidth","canvasHeight","x","Math","random","y","radius","color","floor","length","push","Particle","addEventListener","requestAnimationFrame","fillStyle","fillRect","save","translate","rotate","forEach","particle","draw","restore","this","beginPath","arc","PI","shadowColor","shadowBlur","fill","closePath","className","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"sJAIIA,EAAQC,EAASC,E,yDCJN,I,YDKXC,EAAU,EACVC,EAAQ,EACRC,GAAY,EACVC,EAAS,CAAC,UAAW,UAAW,UAAW,WAmFlCC,MAlFf,WACEC,qBAAU,WACRR,EAASS,SAASC,eAAe,WACjCT,EAAUD,EAAOW,WAAW,MAC5BX,EAAOY,MAAQC,OAAOC,WACtBd,EAAOe,OAASF,OAAOG,YACvBC,IACAC,MACC,IAEH,IAAMD,EAAO,WACXf,EAAY,GACZ,IAAK,IAAIiB,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAG5B,IAAMC,EAAcpB,EAAOY,MAAQ,IAC7BS,EAAerB,EAAOe,OAAS,IAC/BO,EAAIC,KAAKC,SAAWJ,EAAcA,EAAc,EAChDK,EAAIF,KAAKC,SAAWH,EAAeA,EAAe,EAClDK,EAAS,EAAIH,KAAKC,SAClBG,EAAQrB,EAAOiB,KAAKK,MAAML,KAAKC,SAAWlB,EAAOuB,SACvD3B,EAAU4B,KAAK,IAAIC,EAAST,EAAGG,EAAGC,EAAQC,MAG9Cd,OAAOmB,iBAAiB,UAAU,WAChChC,EAAOY,MAAQC,OAAOC,WACtBd,EAAOe,OAASF,OAAOG,YACvBC,OAGFJ,OAAOmB,iBAAiB,aAAa,WACnC3B,GAAY,KAEdQ,OAAOmB,iBAAiB,WAAW,WACjC3B,GAAY,KAGd,IAAMa,EAAU,SAAVA,IACJe,sBAAsBf,GACtBjB,EAAQiC,UAAR,0BAAuC9B,EAAvC,KACAH,EAAQkC,SAAS,EAAG,EAAGnC,EAAOY,MAAOZ,EAAOe,QAE5Cd,EAAQmC,OACRnC,EAAQoC,UAAUrC,EAAOY,MAAQ,EAAGZ,EAAOe,OAAS,GACpDd,EAAQqC,OAAOnC,GACfD,EAAUqC,SAAQ,SAAAC,GAChBA,EAASC,UAEXxC,EAAQyC,UAERvC,GAAW,KACPE,GAAaD,GAAS,IACxBA,GAAS,KACCC,GAAaD,EAAQ,IAC/BA,GAAS,MAIP2B,EA1DO,WA2DX,WAAYT,EAAGG,EAAGC,EAAQC,GAAQ,oBAChCgB,KAAKrB,EAAIA,EACTqB,KAAKlB,EAAIA,EACTkB,KAAKjB,OAASA,EACdiB,KAAKhB,MAAQA,EA/DJ,wCAiEX,WACE1B,EAAQ2C,YACR3C,EAAQ4C,IAAIF,KAAKrB,EAAGqB,KAAKlB,EAAGkB,KAAKjB,OAAQ,EAAa,EAAVH,KAAKuB,IAAQ,GACzD7C,EAAQ8C,YAAcJ,KAAKhB,MAC3B1B,EAAQ+C,WAAa,GACrB/C,EAAQiC,UAAYS,KAAKhB,MACzB1B,EAAQgD,OACRhD,EAAQiD,gBAxEC,KA2Eb,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQC,GAAG,eE1EFC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvD,SAASC,eAAe,SAM1B2C,M","file":"static/js/main.8d3291e2.chunk.js","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useEffect } from 'react';\n\nlet canvas, context, particles;\nlet radians = 0;\nlet alpha = 1;\nlet mouseDown = false;\nconst colors = ['#2185C5', '#7ECEFD', '#FFF6E5', '#FF7F66'];\nfunction App() {\n  useEffect(() => {\n    canvas = document.getElementById('canvas1');\n    context = canvas.getContext('2d');\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    init();\n    animate();\n  }, []);\n\n  const init = () => {\n    particles = [];\n    for (let i = 0; i < 400; i++) {\n      // will be getting a value from zero to the width of the canvas\n      // we did canvas.width/2 subrartion beacuse we are translating\n      const canvasWidth = canvas.width + 300; // because we are seeing empty edges during rotation\n      const canvasHeight = canvas.height + 300;\n      const x = Math.random() * canvasWidth - canvasWidth / 2;\n      const y = Math.random() * canvasHeight - canvasHeight / 2;\n      const radius = 2 * Math.random();\n      const color = colors[Math.floor(Math.random() * colors.length)];\n      particles.push(new Particle(x, y, radius, color));\n    }\n  };\n  window.addEventListener('resize', () => {\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    init();\n  });\n\n  window.addEventListener('mousedown', () => {\n    mouseDown = true;\n  });\n  window.addEventListener('mouseup', () => {\n    mouseDown = false;\n  });\n\n  const animate = () => {\n    requestAnimationFrame(animate);\n    context.fillStyle = `rgba(10, 10,10, ${alpha})`;\n    context.fillRect(0, 0, canvas.width, canvas.height);\n\n    context.save();\n    context.translate(canvas.width / 2, canvas.height / 2);\n    context.rotate(radians);\n    particles.forEach(particle => {\n      particle.draw();\n    });\n    context.restore();\n\n    radians += 0.003;\n    if (mouseDown && alpha >= 0.03) {\n      alpha -= 0.01;\n    } else if (!mouseDown && alpha < 1) {\n      alpha += 0.01;\n    }\n  };\n\n  class Particle {\n    constructor(x, y, radius, color) {\n      this.x = x;\n      this.y = y;\n      this.radius = radius;\n      this.color = color;\n    }\n    draw() {\n      context.beginPath();\n      context.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n      context.shadowColor = this.color;\n      context.shadowBlur = 15;\n      context.fillStyle = this.color;\n      context.fill();\n      context.closePath();\n    }\n  }\n  return (\n    <div className=\"App\">\n      <canvas id=\"canvas1\"></canvas>\n    </div>\n  );\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}